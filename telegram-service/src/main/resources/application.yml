spring:
  application:
    name: telegram-service
  kafka:
    producer:
      bootstrap-servers: localhost:29092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        acks: 1
        spring:
          json:
            add:
              type:
                headers: false
    consumer:
      group-id: telegram-service
      bootstrap-servers: localhost:29092
      auto-offset-reset: earliest
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.json.trusted.packages: '*'
        spring.json.value.default.type: eu.senla.telegramservice.dto.ExmoInfoDto
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
    topics:
      topic-tg-message: TG.MESSAGE
      topic-exmo-user-info: EXMO.USER-INFO
  telegram:
    botname: CryptoExchangeInfoBot
    bottoken: